buildscript {
	ext {
		kotlinVersion = '1.3.11'
		springBootVersion = '2.1.0.RELEASE'
		springAutoRestDocsVersion = '2.0.3'
		dokkaVersion = '0.9.17'
	}
	repositories {
		jcenter()
		mavenCentral()
		maven {
			url artifactoryReadUrl
		}
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")

		classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.9'
		classpath "org.ajoberstar:gradle-git-publish:2.0.0"
		classpath("org.jetbrains.dokka:dokka-gradle-plugin:${dokkaVersion}")
	}
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.exiasoft'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven {
		url artifactoryReadUrl
	}
}

ext {
	set('springCloudVersion', 'Greenwich.RC2')
}

dependencies {
	implementation('org.springframework.boot:spring-boot-starter-actuator')
	implementation('org.springframework.boot:spring-boot-starter-security')
	implementation('org.springframework.boot:spring-boot-starter-webflux')
	implementation('com.fasterxml.jackson.module:jackson-module-kotlin')
	implementation('org.springframework.data:spring-data-commons')
	implementation('org.springframework.cloud:spring-cloud-starter-config')
	implementation('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client')
	implementation('org.springframework.cloud:spring-cloud-starter-sleuth')
	implementation('org.springframework.cloud:spring-cloud-starter-zipkin')

	// Start for Tomcat 9 + JDK 10
	implementation("javax.xml.bind:jaxb-api:2.3.1")
	implementation("com.sun.xml.bind:jaxb-impl:2.3.1")
	implementation("org.glassfish.jaxb:jaxb-runtime:2.3.1")
	implementation("javax.activation:activation:1.1.1")
	// End for Tomcat 9 + JDK 10
	implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
	implementation("org.jetbrains.kotlin:kotlin-reflect")

	implementation("io.github.microutils:kotlin-logging:1.6.20")

	implementation('com.exiasoft:itscommon:0.0.1-SNAPSHOT')
	implementation('com.exiasoft:itsauthen-client:0.0.1-SNAPSHOT')
	implementation('com.exiasoft:itsstaticdata-client:0.0.1-SNAPSHOT')

	implementation('org.springframework.restdocs:spring-restdocs-webtestclient:2.0.2.RELEASE')

	testImplementation('org.springframework.boot:spring-boot-starter-test')
	testImplementation('io.projectreactor:reactor-test')
	testImplementation('org.junit.jupiter:junit-jupiter-api')
	testImplementation('org.junit.jupiter:junit-jupiter-params')
	testImplementation('org.junit.jupiter:junit-jupiter-engine')
	testImplementation('org.junit.platform:junit-platform-runner')
	testImplementation('org.junit.platform:junit-platform-engine')
	testImplementation('io.mockk:mockk:1.9')

	testImplementation('org.springframework.boot:spring-boot-starter-test')
	testImplementation('org.springframework.security:spring-security-test')
	// required by spring-auto-restdocs
	testImplementation('org.glassfish:javax.el:3.0.0')

	testImplementation('com.exiasoft:itscommon-test:0.0.1-SNAPSHOT')

	implementation("capital.scalable:spring-auto-restdocs-core:${springAutoRestDocsVersion}")
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

compileKotlin {
	kotlinOptions {
		freeCompilerArgs = ['-Xjsr305=strict']
		jvmTarget = '1.8'
	}
}

compileTestKotlin {
	kotlinOptions {
		freeCompilerArgs = ['-Xjsr305=strict']
		jvmTarget = '1.8'
	}
}
