buildscript {
	ext {
		kotlinVersion = '1.3.11'
		springBootVersion = '2.1.0.RELEASE'
	}
	repositories {
		mavenCentral()
		maven {
			url artifactoryReadUrl
		}
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
	}
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.exiasoft'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
compileKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}
compileTestKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/milestone" }
	maven {
		url artifactoryReadUrl
	}
}

ext {
	springCloudVersion = 'Greenwich.M1'
	clientJarToPublish = file('build/libs/itsauthen-client-0.0.1-SNAPSHOT.jar')
	clientArtifactId = 'itsauthen-client'
}

dependencies {
	implementation('org.springframework.boot:spring-boot-starter-actuator')
	implementation('org.springframework.boot:spring-boot-starter-security')
	implementation('org.springframework.boot:spring-boot-starter-webflux')
	implementation('com.fasterxml.jackson.module:jackson-module-kotlin')
	implementation('org.springframework.cloud:spring-cloud-starter-config')
	implementation('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client')
	implementation('org.springframework.cloud:spring-cloud-starter-sleuth')
	implementation('org.springframework.cloud:spring-cloud-starter-zipkin')

	// Start for Tomcat 9 + JDK 10
	implementation("javax.xml.bind:jaxb-api:2.3.1")
	implementation("com.sun.xml.bind:jaxb-impl:2.3.1")
	implementation("org.glassfish.jaxb:jaxb-runtime:2.3.1")
	implementation("javax.activation:activation:1.1.1")
	// End for Tomcat 9 + JDK 10
	implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
	implementation("org.jetbrains.kotlin:kotlin-reflect")
	implementation("io.jsonwebtoken:jjwt:0.9.0")
	implementation("com.thoughtworks.xstream:xstream:1.4.10")
	implementation("io.github.microutils:kotlin-logging:1.5.4")
	implementation("ch.qos.logback:logback-core:1.2.3")
	implementation("ch.qos.logback:logback-classic:1.2.3")

	implementation('com.exiasoft:itscommon:0.0.1-SNAPSHOT')

	runtime('de.siegmar:logback-gelf:1.1.0')

	testImplementation('org.springframework.boot:spring-boot-starter-test')
	testImplementation('io.projectreactor:reactor-test')
	testImplementation('org.junit.jupiter:junit-jupiter-api')

    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation('io.projectreactor:reactor-test')
    testImplementation('org.junit.jupiter:junit-jupiter-api')
    testImplementation('org.junit.jupiter:junit-jupiter-params')
    testImplementation('org.junit.platform:junit-platform-runner')
	testImplementation('com.exiasoft:itscommon-test:0.0.1-SNAPSHOT')
    testRuntime('org.junit.jupiter:junit-jupiter-engine')
    testRuntime('org.junit.platform:junit-platform-engine')

}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

task clientJar(type: Jar) {
	dependsOn compileKotlin
	baseName = clientArtifactId
	metaInf { from 'src/main/resources/META-INF/spring.factories' }
	from 'build/classes/kotlin/main'
	include ('com/exiasoft/itsauthen/config/ItsAuthenServiceClientAutoConfig*.class', 'com/exiasoft/itsauthen/config/FunctionListConfig.class', 'com/exiasoft/itsauthen/access/**', 'com/exiasoft/itsauthen/model/**', 'com/exiasoft/itsauthen/dto/**', 'com/exiasoft/itsauthen/service/**')
	exclude ('com/exiasoft/itsauthen/service/AuthenticationService*.class', 'com/exiasoft/itsauthen/service/UserProfileService*.class', 'com/exiasoft/itsauthen/service/impl/server')
}

publishing {
	publications {
		maven( MavenPublication ) {
			artifact clientJarToPublish
			artifactId clientArtifactId

			pom.withXml {
				def dependenciesNode = asNode().appendNode('dependencies')

				//Iterate over the compile dependencies (we don't want the test ones), adding a <dependency> node for each
				configurations.compile.allDependencies.each {
					def dependencyNode = dependenciesNode.appendNode('dependency')
					dependencyNode.appendNode('groupId', it.group)
					dependencyNode.appendNode('artifactId', it.name)
					dependencyNode.appendNode('version', it.version)
				}
			}
		}
	}
	repositories {
		maven {
			url artifactoryWriteUrl
			credentials {
				username artifactoryWriteUsername
				password artifactoryWritePassword
			}
		}
	}
}